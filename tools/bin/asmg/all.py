instructions		 = 	{}
instructions['ACALL']	 = 	{ "desc" : "Absolute Call"},
instructions['ADD']		 = 	{"desc" : "Add Accumulator (With Carry)"},
instructions['AJMP']	 = 	{ "desc" : "Absolute Jump"},
instructions['ANL']		 = 	{ "desc" : "Bitwise AND"},
instructions['CJNE']	 = 	{ "desc" : "Compare and Jump if Not Equal"},
instructions['CLR']		 = 	{ "desc" : "Clear Register"},
instructions['CPL']		 = 	{ "desc" : "Complement Register"},
instructions['DA']		 = 	{ "desc" : "Decimal Adjust"},
instructions['DEC']		 = 	{ "desc" : "Decrement Register"},
instructions['DIV']		 = 	{ "desc" : "Divide Accumulator by B"},
instructions['DJNZ']	 = 	{ "desc" : "Decrement Register and Jump if Not Zero"},
instructions['INC']		 = 	{ "desc" : "Increment Register"},
instructions['JB']		 = 	{ "desc" : "Jump if Bit Set"},
instructions['JBC']		 = 	{ "desc" : "Jump if Bit Set and Clear Bit"},
instructions['JC']		 = 	{ "desc" : "Jump if Carry Set"},
instructions['JMP']		 = 	{ "desc" : "Jump to Address"},
instructions['JNB']		 = 	{ "desc" : "Jump if Bit Not Set"},
instructions['JNC']		 = 	{ "desc" : "Jump if Carry Not Set"},
instructions['JNZ']		 = 	{ "desc" : "Jump if Accumulator Not Zero"},
instructions['JZ']		 = 	{ "desc" : "Jump if Accumulator Zero"},
instructions['LCALL']	 = 	{ "desc" : "Long Call"},
instructions['LJMP']	 = 	{ "desc" : "Long Jump"},
instructions['MOV']		 = 	{ "desc" : "Move Memory"},
instructions['MOVC']	 = 	{ "desc" : "Move Code Memory"},
instructions['MOVX']	 = 	{ "desc" : "Move Extended Memory"},
instructions['MUL']		 = 	{ "desc" : "Multiply Accumulator by B"},
instructions['NOP']		 = 	{ "desc" : "No Operation"},
instructions['ORL']		 = 	{ "desc" : "Bitwise OR"},
instructions['POP']		 = 	{ "desc" : "Pop Value From Stack"},
instructions['PUSH']	 = 	{ "desc" : "Push Value Onto Stack"},
instructions['RET']		 = 	{ "desc" : "Return From Subroutine"},
instructions['RETI']	 = 	{ "desc" : "Return From Interrupt"},
instructions['RL']		 = 	{ "desc" : "Rotate Accumulator Left"},
instructions['RLC']		 = 	{ "desc" : "Rotate Accumulator Left Through Carry"},
instructions['RR']		 = 	{ "desc" : "Rotate Accumulator Right"},
instructions['RRC']		 = 	{ "desc" : "Rotate Accumulator Right Through Carry"},
instructions['SETB']	 = 	{ "desc" : "Set Bit"},
instructions['SJMP']	 = 	{ "desc" : "Short Jump"},
instructions['SUBB']	 = 	{ "desc" : "Subtract From Accumulator With Borrow"},
instructions['SWAP']	 = 	{ "desc" : "Swap Accumulator Nibbles"},
instructions['XCH']		 = 	{ "desc" : "Exchange Bytes"},
instructions['XCHD']	 = 	{ "desc" : "Exchange Digits"},
instructions['XRL']		 = 	{ "desc" : "Bitwise Exclusive OR"},
